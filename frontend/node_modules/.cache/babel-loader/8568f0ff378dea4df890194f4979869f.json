{"ast":null,"code":"var _jsxFileName = \"/home/amanda/Documentos/PTG/curso/learningReact/my-app/frontend/src/pages/ToDo/TaskContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskContext = /*#__PURE__*/createContext();\nexport default function TaskContextProvider({\n  children\n}) {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await api.get('/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      fetchData();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: [tasks, setTasks],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskContextProvider, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n\n_c = TaskContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskContextProvider\");","map":{"version":3,"sources":["/home/amanda/Documentos/PTG/curso/learningReact/my-app/frontend/src/pages/ToDo/TaskContextProvider.jsx"],"names":["React","createContext","useState","useEffect","toast","api","TaskContext","TaskContextProvider","children","tasks","setTasks","fetchData","response","get","data","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEP,eAAe,SAASM,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AAAA;;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,GAAG,CAACQ,GAAJ,CAAQ,QAAR,CAAvB;AACAH,MAAAA,QAAQ,CAACE,QAAQ,CAACE,IAAV,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdX,MAAAA,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD;AACF,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI;AACFQ,MAAAA,SAAS;AACV,KAFD,CAEE,OAAOI,KAAP,EAAc;AACdX,MAAAA,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACP,KAAD,EAAQC,QAAR,CAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBuBD,mB;;KAAAA,mB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport api from '../../utils/api';\n\nexport const TaskContext = createContext();\n\nexport default function TaskContextProvider({ children }) {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await api.get('/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    try {\n      fetchData();\n    } catch (error) {\n      toast.error(error.message);\n    }\n  }, []);\n\n  return (\n    <TaskContext.Provider value={[tasks, setTasks]}>\n      {children}\n    </TaskContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}