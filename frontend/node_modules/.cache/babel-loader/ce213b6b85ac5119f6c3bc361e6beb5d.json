{"ast":null,"code":"var _jsxFileName = \"/home/amanda/Documentos/PTG/curso/learningReact/my-app/frontend/src/pages/User/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Container, Button, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Page from '../../components/Page';\nimport ListView from '../../components/ListView';\nimport api from '../../utils/api';\nimport ModalComponent from '../../components/Modal';\nimport { validName, validEmail } from '../../components/UserComps/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function User() {\n  _s();\n\n  const endpoint = '/users';\n  const [user, setUser] = useState({\n    email: '',\n    name: ''\n  });\n  const [users, setUsers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const onRemoveUser = async () => {\n    try {\n      await api.delete(`${endpoint}/${user.id}`);\n      setUsers(users.filter(item => item.id !== user.id));\n      toast('Removed user');\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const onEditUser = id => {\n    const mainUser = users.filter(item => item.id === id);\n\n    if (mainUser.length) {\n      setUser(mainUser[0]);\n      setShowModal(!showModal);\n    } else {\n      toast(\"Can't find user\");\n    }\n  };\n\n  const onUpdateUser = async () => {\n    try {\n      if (validName(user.name) && validEmail(user.email)) {\n        await api.put(`${endpoint}/${user.id}`, { ...user\n        });\n        toast('Updated user');\n        setUsers(users.map(item => {\n          if (item.id === user.id) {\n            return user;\n          }\n\n          return item;\n        }));\n        setShowModal(!showModal);\n      } else {\n        toast('Enter a valid input');\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const onClose = () => {\n    setShowModal(!showModal);\n  };\n\n  const columns = [{\n    name: 'name',\n    tag: 'User'\n  }, {\n    name: 'email',\n    tag: 'Email',\n    render: email => /*#__PURE__*/_jsxDEV(\"i\", {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }, this)\n  }, {\n    name: 'actions',\n    tag: 'Actions',\n    render: (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: () => onEditUser(row.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        className: \"ml-2\",\n        onClick: onRemoveUser,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n        show: showModal,\n        toggle: onClose,\n        title: \"Edit User\",\n        onSubmit: onUpdateUser,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setUser({ ...user,\n              email: value\n            }),\n            title: \"Email\",\n            type: \"email\",\n            placeholder: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setUser({ ...user,\n              name: value\n            }),\n            type: \"text\",\n            maxLength: 50,\n            placeholder: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }];\n\n  const fetchData = async () => {\n    try {\n      const response = await api.get(endpoint);\n      setUsers(response.data);\n    } catch (error) {\n      toast.error(`User page: ${error.message}`);\n    }\n  };\n\n  useEffect(() => fetchData(), []);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"User\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/newuser\",\n      className: \"btn btn-dark\",\n      children: \"New user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(ListView, {\n        columns: columns,\n        list: users\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n_s(User, \"4tah4OWmY71dCq2I0XkCNsAEXq8=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/amanda/Documentos/PTG/curso/learningReact/my-app/frontend/src/pages/User/index.jsx"],"names":["React","useState","useEffect","Container","Button","Form","Link","toast","Page","ListView","api","ModalComponent","validName","validEmail","User","endpoint","user","setUser","email","name","users","setUsers","showModal","setShowModal","onRemoveUser","delete","id","filter","item","error","message","onEditUser","mainUser","length","onUpdateUser","put","map","onClose","columns","tag","render","_","row","target","value","fetchData","response","get","data"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\nimport {\n  Container, Button, Form,\n} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Page from '../../components/Page';\nimport ListView from '../../components/ListView';\nimport api from '../../utils/api';\nimport ModalComponent from '../../components/Modal';\nimport { validName, validEmail } from '../../components/UserComps/Form';\n\nexport default function User() {\n  const endpoint = '/users';\n  const [user, setUser] = useState({\n    email: '',\n    name: '',\n  });\n  const [users, setUsers] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const onRemoveUser = async () => {\n    try {\n      await api.delete(`${endpoint}/${user.id}`);\n      setUsers(users.filter((item) => item.id !== user.id));\n      toast('Removed user');\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const onEditUser = (id) => {\n    const mainUser = users.filter((item) => (item.id === id));\n    if (mainUser.length) {\n      setUser(mainUser[0]);\n      setShowModal(!showModal);\n    } else {\n      toast(\"Can't find user\");\n    }\n  };\n\n  const onUpdateUser = async () => {\n    try {\n      if (validName(user.name) && validEmail(user.email)) {\n        await api.put(`${endpoint}/${user.id}`, { ...user });\n        toast('Updated user');\n        setUsers(users.map((item) => {\n          if (item.id === user.id) {\n            return user;\n          }\n          return item;\n        }));\n        setShowModal(!showModal);\n      } else {\n        toast('Enter a valid input');\n      }\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  const onClose = () => {\n    setShowModal(!showModal);\n  };\n\n  const columns = [\n    {\n      name: 'name',\n      tag: 'User',\n    },\n    {\n      name: 'email',\n      tag: 'Email',\n      render: ((email) => <i>{email}</i>),\n    },\n    {\n      name: 'actions',\n      tag: 'Actions',\n      render: ((_, row) => (\n        <div>\n          <Button variant=\"dark\" onClick={() => onEditUser(row.id)}>Edit</Button>\n          <Button variant=\"danger\" className=\"ml-2\" onClick={onRemoveUser}>Remove</Button>\n          <ModalComponent show={showModal} toggle={onClose} title=\"Edit User\" onSubmit={onUpdateUser}>\n            <Form>\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                onChange={({ target: { value } }) => (\n                  setUser({ ...user, email: value }))}\n                title=\"Email\"\n                type=\"email\"\n                placeholder={user.email}\n              />\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                onChange={({ target: { value } }) => (\n                  setUser({ ...user, name: value })\n                )}\n                type=\"text\"\n                maxLength={50}\n                placeholder={user.name}\n              />\n            </Form>\n          </ModalComponent>\n        </div>\n      )),\n    },\n  ];\n\n  const fetchData = async () => {\n    try {\n      const response = await api.get(endpoint);\n      setUsers(response.data);\n    } catch (error) {\n      toast.error(`User page: ${error.message}`);\n    }\n  };\n\n  useEffect(() => (\n    fetchData()\n  ), []);\n\n  return (\n    <Page title=\"User\">\n      <Link to=\"/newuser\" className=\"btn btn-dark\">New user</Link>\n      <Container className=\"mt-5\">\n        <ListView columns={columns} list={users} />\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}